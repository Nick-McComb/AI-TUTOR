{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NickM\\\\Desktop\\\\Temp\\\\AI-TUTOR\\\\frontend-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ChatTab from './components/ChatTab';\nimport DocumentsTab from './components/DocumentsTab';\nimport UploadTab from './components/UploadTab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('chat');\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [documents, setDocuments] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\n  const [currentStreamingMessage, setCurrentStreamingMessage] = useState('');\n  const [processingCount, setProcessingCount] = useState(0);\n  const ws = useRef(null);\n  const refreshIntervalRef = useRef(null);\n\n  // Connect to WebSocket when component mounts\n  useEffect(() => {\n    connectWebSocket();\n    loadDocuments();\n    refreshIntervalRef.current = setInterval(() => {\n      if (processingCount > 0) {\n        loadDocuments();\n      }\n    }, 5000);\n\n    // Cleanup on unmount\n    return () => {\n      disconnectWebSocket();\n      if (refreshIntervalRef.current) {\n        clearInterval(refreshIntervalRef.current);\n      }\n    };\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  // Watch for changes in processing documents\n  useEffect(() => {\n    const processingDocs = documents.filter(doc => ['processing', 'uploaded', 'pending', 'downloading', 'transcribing'].includes(doc.status));\n    setProcessingCount(processingDocs.length);\n  }, [documents]);\n  const connectWebSocket = () => {\n    ws.current = new WebSocket(`ws://${window.location.hostname}:8000/ws/chat`);\n    ws.current.onopen = () => {\n      setIsConnected(true);\n      setConnectionStatus('Connected');\n      addSystemMessage('Connected to RAG Chat WebSocket');\n    };\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"start\") {\n        setIsStreaming(true);\n        setCurrentStreamingMessage('');\n      } else if (data.type === \"stream\") {\n        setCurrentStreamingMessage(prev => prev + data.content);\n        scrollToBottom();\n      } else if (data.type === \"end\") {\n        setCurrentStreamingMessage(prevMessage => {\n          setIsStreaming(false);\n          addMessage(prevMessage, 'ai');\n          return '';\n        });\n      } else if (data.type === \"system\") {\n        addSystemMessage(data.content);\n      } else if (data.type === \"document_update\") {\n        // Update document in the list\n        setDocuments(prevDocs => {\n          const updatedDocs = [...prevDocs];\n          const index = updatedDocs.findIndex(doc => doc.id === data.document.id);\n          if (index !== -1) {\n            updatedDocs[index] = data.document;\n          } else {\n            updatedDocs.push(data.document);\n          }\n          return updatedDocs;\n        });\n      } else if (data.type === \"document_deleted\") {\n        // Remove document from the list\n        setDocuments(prevDocs => prevDocs.filter(doc => doc.id !== data.document_id));\n        addSystemMessage(`Document ${data.document_id} was deleted`);\n      }\n    };\n    ws.current.onclose = () => {\n      setIsConnected(false);\n      setConnectionStatus('Disconnected');\n      addSystemMessage('Disconnected from RAG Chat WebSocket');\n    };\n    ws.current.onerror = () => {\n      addSystemMessage('WebSocket error occurred');\n    };\n  };\n  const disconnectWebSocket = () => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  };\n  const addMessage = (text, sender) => {\n    setMessages(prev => [...prev, {\n      text,\n      sender,\n      time: new Date().toLocaleTimeString()\n    }]);\n    scrollToBottom();\n  };\n  const addSystemMessage = text => {\n    setMessages(prev => [...prev, {\n      text,\n      sender: 'system',\n      time: new Date().toLocaleTimeString()\n    }]);\n    scrollToBottom();\n  };\n  const sendMessage = () => {\n    if (!newMessage.trim() || !isConnected) return;\n\n    // Add the user message to chat\n    addMessage(newMessage, 'user');\n\n    // Send via WebSocket\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify({\n        type: \"message\",\n        content: newMessage\n      }));\n    }\n    setNewMessage('');\n  };\n  const clearChat = () => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify({\n        type: \"command\",\n        command: \"clear\"\n      }));\n      setMessages([]);\n      addSystemMessage(\"Chat history cleared\");\n    }\n  };\n  const deleteDocument = async documentId => {\n    try {\n      // First attempt to delete via WebSocket\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n        ws.current.send(JSON.stringify({\n          type: \"command\",\n          command: \"delete_document\",\n          document_id: documentId\n        }));\n        return;\n      }\n\n      // Fallback to REST API if WebSocket is not available\n      const response = await fetch(`${API_BASE_URL}/api/documents/${documentId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Remove from local state\n        setDocuments(prevDocs => prevDocs.filter(doc => doc.id !== documentId));\n        addSystemMessage(`Document ${documentId} deleted successfully`);\n      } else {\n        const errorData = await response.json();\n        addSystemMessage(`Error: ${errorData.detail || 'Failed to delete document'}`);\n      }\n    } catch (error) {\n      console.error('Error deleting document:', error);\n      addSystemMessage(`Error: ${error.message}`);\n    }\n  };\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      const container = document.querySelector('.chat-container');\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    }, 50);\n  };\n  const loadDocuments = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/documents`);\n      if (response.ok) {\n        const data = await response.json();\n        setDocuments(data);\n      }\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n    }\n  };\n  const jumpToTranscriptSegment = segment => {\n    // Add a message to reference the transcript\n    const message = `Can you tell me more about this part: \"${segment.text}\"`;\n    addMessage(message, 'user');\n\n    // Send via WebSocket\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify({\n        type: \"message\",\n        content: message\n      }));\n    }\n\n    // Switch to chat tab\n    setActiveTab('chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"RAG Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert ${isConnected ? 'alert-success' : 'alert-danger'}`,\n      children: [\"Connection Status: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav nav-tabs mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: `nav-link ${activeTab === 'chat' ? 'active' : ''}`,\n          href: \"#\",\n          onClick: e => {\n            e.preventDefault();\n            setActiveTab('chat');\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: `nav-link ${activeTab === 'documents' ? 'active' : ''}`,\n          href: \"#\",\n          onClick: e => {\n            e.preventDefault();\n            setActiveTab('documents');\n          },\n          children: \"Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: `nav-link ${activeTab === 'upload' ? 'active' : ''}`,\n          href: \"#\",\n          onClick: e => {\n            e.preventDefault();\n            setActiveTab('upload');\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), activeTab === 'chat' && /*#__PURE__*/_jsxDEV(ChatTab, {\n      messages: messages,\n      newMessage: newMessage,\n      setNewMessage: setNewMessage,\n      sendMessage: sendMessage,\n      clearChat: clearChat,\n      isConnected: isConnected,\n      isStreaming: isStreaming,\n      currentStreamingMessage: currentStreamingMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), activeTab === 'documents' && /*#__PURE__*/_jsxDEV(DocumentsTab, {\n      documents: documents,\n      processingCount: processingCount,\n      jumpToTranscriptSegment: jumpToTranscriptSegment,\n      deleteDocument: deleteDocument\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), activeTab === 'upload' && /*#__PURE__*/_jsxDEV(UploadTab, {\n      addSystemMessage: addSystemMessage,\n      refreshDocuments: loadDocuments,\n      apiBaseUrl: API_BASE_URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"84fGWbBUBSeXF6SU+88kMzHiVvw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatTab","DocumentsTab","UploadTab","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","activeTab","setActiveTab","messages","setMessages","newMessage","setNewMessage","sessionId","setSessionId","documents","setDocuments","isConnected","setIsConnected","isStreaming","setIsStreaming","connectionStatus","setConnectionStatus","currentStreamingMessage","setCurrentStreamingMessage","processingCount","setProcessingCount","ws","refreshIntervalRef","connectWebSocket","loadDocuments","current","setInterval","disconnectWebSocket","clearInterval","processingDocs","filter","doc","includes","status","length","WebSocket","window","location","hostname","onopen","addSystemMessage","onmessage","event","data","JSON","parse","type","prev","content","scrollToBottom","prevMessage","addMessage","prevDocs","updatedDocs","index","findIndex","id","document","push","document_id","onclose","onerror","close","text","sender","time","Date","toLocaleTimeString","sendMessage","trim","readyState","OPEN","send","stringify","clearChat","command","deleteDocument","documentId","response","fetch","method","ok","errorData","json","detail","error","console","message","setTimeout","container","querySelector","scrollTop","scrollHeight","jumpToTranscriptSegment","segment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","e","preventDefault","refreshDocuments","apiBaseUrl","_c","$RefreshReg$"],"sources":["C:/Users/NickM/Desktop/Temp/AI-TUTOR/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport ChatTab from './components/ChatTab';\r\nimport DocumentsTab from './components/DocumentsTab';\r\nimport UploadTab from './components/UploadTab';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\nfunction App() {\r\n  const [activeTab, setActiveTab] = useState('chat');\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isStreaming, setIsStreaming] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('Disconnected');\r\n  const [currentStreamingMessage, setCurrentStreamingMessage] = useState('');\r\n  const [processingCount, setProcessingCount] = useState(0);\r\n  \r\n  const ws = useRef(null);\r\n  const refreshIntervalRef = useRef(null);\r\n\r\n  // Connect to WebSocket when component mounts\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    loadDocuments();\r\n    \r\n    refreshIntervalRef.current = setInterval(() => {\r\n      if (processingCount > 0) {\r\n        loadDocuments();\r\n      }\r\n    }, 5000);\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      disconnectWebSocket();\r\n      if (refreshIntervalRef.current) {\r\n        clearInterval(refreshIntervalRef.current);\r\n      }\r\n    };\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  // Watch for changes in processing documents\r\n  useEffect(() => {\r\n    const processingDocs = documents.filter(doc => \r\n      ['processing', 'uploaded', 'pending', 'downloading', 'transcribing'].includes(doc.status)\r\n    );\r\n    setProcessingCount(processingDocs.length);\r\n  }, [documents]);\r\n\r\n  const connectWebSocket = () => {\r\n    ws.current = new WebSocket(`ws://${window.location.hostname}:8000/ws/chat`);\r\n    \r\n    ws.current.onopen = () => {\r\n      setIsConnected(true);\r\n      setConnectionStatus('Connected');\r\n      addSystemMessage('Connected to RAG Chat WebSocket');\r\n    };\r\n    \r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      \r\n      if (data.type === \"start\") {\r\n        setIsStreaming(true);\r\n        setCurrentStreamingMessage('');\r\n      } else if (data.type === \"stream\") {\r\n        setCurrentStreamingMessage(prev => prev + data.content);\r\n        scrollToBottom();\r\n      } else if (data.type === \"end\") {\r\n        setCurrentStreamingMessage(prevMessage => {\r\n          setIsStreaming(false);\r\n          addMessage(prevMessage, 'ai');\r\n          return '';\r\n        });\r\n      } else if (data.type === \"system\") {\r\n        addSystemMessage(data.content);\r\n      } else if (data.type === \"document_update\") {\r\n        // Update document in the list\r\n        setDocuments(prevDocs => {\r\n          const updatedDocs = [...prevDocs];\r\n          const index = updatedDocs.findIndex(doc => doc.id === data.document.id);\r\n          if (index !== -1) {\r\n            updatedDocs[index] = data.document;\r\n          } else {\r\n            updatedDocs.push(data.document);\r\n          }\r\n          return updatedDocs;\r\n        });\r\n      } else if (data.type === \"document_deleted\") {\r\n        // Remove document from the list\r\n        setDocuments(prevDocs => prevDocs.filter(doc => doc.id !== data.document_id));\r\n        addSystemMessage(`Document ${data.document_id} was deleted`);\r\n      }\r\n    };\r\n    \r\n    ws.current.onclose = () => {\r\n      setIsConnected(false);\r\n      setConnectionStatus('Disconnected');\r\n      addSystemMessage('Disconnected from RAG Chat WebSocket');\r\n    };\r\n    \r\n    ws.current.onerror = () => {\r\n      addSystemMessage('WebSocket error occurred');\r\n    };\r\n  };\r\n  \r\n  const disconnectWebSocket = () => {\r\n    if (ws.current) {\r\n      ws.current.close();\r\n    }\r\n  };\r\n  \r\n  const addMessage = (text, sender) => {\r\n    setMessages(prev => [...prev, {\r\n      text,\r\n      sender,\r\n      time: new Date().toLocaleTimeString()\r\n    }]);\r\n    scrollToBottom();\r\n  };\r\n  \r\n  const addSystemMessage = (text) => {\r\n    setMessages(prev => [...prev, {\r\n      text,\r\n      sender: 'system',\r\n      time: new Date().toLocaleTimeString()\r\n    }]);\r\n    scrollToBottom();\r\n  };\r\n  \r\n  const sendMessage = () => {\r\n    if (!newMessage.trim() || !isConnected) return;\r\n    \r\n    // Add the user message to chat\r\n    addMessage(newMessage, 'user');\r\n    \r\n    // Send via WebSocket\r\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n      ws.current.send(JSON.stringify({\r\n        type: \"message\",\r\n        content: newMessage\r\n      }));\r\n    }\r\n    \r\n    setNewMessage('');\r\n  };\r\n  \r\n  const clearChat = () => {\r\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n      ws.current.send(JSON.stringify({\r\n        type: \"command\",\r\n        command: \"clear\"\r\n      }));\r\n      setMessages([]);\r\n      addSystemMessage(\"Chat history cleared\");\r\n    }\r\n  };\r\n  \r\n  const deleteDocument = async (documentId) => {\r\n    try {\r\n      // First attempt to delete via WebSocket\r\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n        ws.current.send(JSON.stringify({\r\n          type: \"command\",\r\n          command: \"delete_document\",\r\n          document_id: documentId\r\n        }));\r\n        return;\r\n      }\r\n      \r\n      // Fallback to REST API if WebSocket is not available\r\n      const response = await fetch(`${API_BASE_URL}/api/documents/${documentId}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Remove from local state\r\n        setDocuments(prevDocs => prevDocs.filter(doc => doc.id !== documentId));\r\n        addSystemMessage(`Document ${documentId} deleted successfully`);\r\n      } else {\r\n        const errorData = await response.json();\r\n        addSystemMessage(`Error: ${errorData.detail || 'Failed to delete document'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting document:', error);\r\n      addSystemMessage(`Error: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const scrollToBottom = () => {\r\n    setTimeout(() => {\r\n      const container = document.querySelector('.chat-container');\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    }, 50);\r\n  };\r\n  \r\n  const loadDocuments = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/documents`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDocuments(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n    }\r\n  };\r\n  \r\n  const jumpToTranscriptSegment = (segment) => {\r\n    // Add a message to reference the transcript\r\n    const message = `Can you tell me more about this part: \"${segment.text}\"`;\r\n    addMessage(message, 'user');\r\n    \r\n    // Send via WebSocket\r\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n      ws.current.send(JSON.stringify({\r\n        type: \"message\",\r\n        content: message\r\n      }));\r\n    }\r\n    \r\n    // Switch to chat tab\r\n    setActiveTab('chat');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h1 className=\"mb-4\">RAG Chat Application</h1>\r\n      \r\n      <div className={`alert ${isConnected ? 'alert-success' : 'alert-danger'}`}>\r\n        Connection Status: {connectionStatus}\r\n      </div>\r\n      \r\n      <ul className=\"nav nav-tabs mb-4\">\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${activeTab === 'chat' ? 'active' : ''}`} \r\n            href=\"#\" \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setActiveTab('chat');\r\n            }}\r\n          >\r\n            Chat\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${activeTab === 'documents' ? 'active' : ''}`} \r\n            href=\"#\" \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setActiveTab('documents');\r\n            }}\r\n          >\r\n            Documents\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a \r\n            className={`nav-link ${activeTab === 'upload' ? 'active' : ''}`} \r\n            href=\"#\" \r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setActiveTab('upload');\r\n            }}\r\n          >\r\n            Upload\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      \r\n      {activeTab === 'chat' && (\r\n        <ChatTab \r\n          messages={messages}\r\n          newMessage={newMessage}\r\n          setNewMessage={setNewMessage}\r\n          sendMessage={sendMessage}\r\n          clearChat={clearChat}\r\n          isConnected={isConnected}\r\n          isStreaming={isStreaming}\r\n          currentStreamingMessage={currentStreamingMessage}\r\n        />\r\n      )}\r\n      \r\n      {activeTab === 'documents' && (\r\n        <DocumentsTab \r\n          documents={documents}\r\n          processingCount={processingCount}\r\n          jumpToTranscriptSegment={jumpToTranscriptSegment}\r\n          deleteDocument={deleteDocument}\r\n        />\r\n      )}\r\n      \r\n      {activeTab === 'upload' && (\r\n        <UploadTab \r\n          addSystemMessage={addSystemMessage} \r\n          refreshDocuments={loadDocuments} \r\n          apiBaseUrl={API_BASE_URL}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}